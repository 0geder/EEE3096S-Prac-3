ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   * @brief          : CODE MODIFIED FOR EEE3096S PRACTICAL 3, TASK 5 (FPU IMPACT - ALL DIMS)
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/main.c ****   * in the root directory of this software component.
  15:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdint.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 2


  34:Core/Src/main.c **** #define MAX_ITER 100
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** // --- ADDED FOR TASK 5 ---
  45:Core/Src/main.c **** const int image_sizes[5] = {128, 160, 192, 224, 256};
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** // --- Result arrays for Float version ---
  48:Core/Src/main.c **** uint32_t times_float[5];
  49:Core/Src/main.c **** uint64_t checksums_float[5];
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** // --- Result arrays for Double version ---
  52:Core/Src/main.c **** uint32_t times_double[5];
  53:Core/Src/main.c **** uint64_t checksums_double[5];
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** volatile int test_complete = 0;
  56:Core/Src/main.c **** // --- END OF ADDED CODE ---
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** // --- ADDED FOR TASK 5 ---
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  65:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  66:Core/Src/main.c **** // --- END OF ADDED CODE ---
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c ****   MX_GPIO_Init();
  83:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  84:Core/Src/main.c ****   // --- ADDED FOR TASK 5 ---
  85:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); // LED on: Start
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   // Loop through all 5 image sizes
  88:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
  89:Core/Src/main.c **** 	  int current_size = image_sizes[i];
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 3


  91:Core/Src/main.c **** 	  // --- Run Float Test ---
  92:Core/Src/main.c **** 	  uint32_t start_time = HAL_GetTick();
  93:Core/Src/main.c **** 	  checksums_float[i] = calculate_mandelbrot_float(current_size, current_size, MAX_ITER);
  94:Core/Src/main.c **** 	  times_float[i] = HAL_GetTick() - start_time;
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** 	  // --- Run Double Test ---
  97:Core/Src/main.c **** 	  start_time = HAL_GetTick();
  98:Core/Src/main.c **** 	  checksums_double[i] = calculate_mandelbrot_double(current_size, current_size, MAX_ITER);
  99:Core/Src/main.c **** 	  times_double[i] = HAL_GetTick() - start_time;
 100:Core/Src/main.c ****   }
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   test_complete = 1;
 103:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET); // LED on: Finish
 104:Core/Src/main.c ****   // --- END OF ADDED CODE ---
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Infinite loop */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c **** }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief System Clock Configuration
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** void SystemClock_Config(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 121:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     Error_Handler();
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 141:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 142:Core/Src/main.c ****   {
 143:Core/Src/main.c ****     Error_Handler();
 144:Core/Src/main.c ****   }
 145:Core/Src/main.c **** }
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** /**
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 4


 148:Core/Src/main.c ****   * @brief GPIO Initialization Function
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** static void MX_GPIO_Init(void)
 151:Core/Src/main.c **** {
  26              		.loc 1 151 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 152:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 152 3 view .LVU1
  40              		.loc 1 152 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 153:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 153 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 153 3 view .LVU4
  50 0010 0094     		str	r4, [sp]
  51              		.loc 1 153 3 view .LVU5
  52 0012 184B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56              		.loc 1 153 3 view .LVU6
  57 001c 1A6B     		ldr	r2, [r3, #48]
  58 001e 02F00402 		and	r2, r2, #4
  59 0022 0092     		str	r2, [sp]
  60              		.loc 1 153 3 view .LVU7
  61 0024 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 153 3 view .LVU8
 154:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 154 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 154 3 view .LVU10
  67 0026 0194     		str	r4, [sp, #4]
  68              		.loc 1 154 3 view .LVU11
  69 0028 1A6B     		ldr	r2, [r3, #48]
  70 002a 42F08002 		orr	r2, r2, #128
  71 002e 1A63     		str	r2, [r3, #48]
  72              		.loc 1 154 3 view .LVU12
  73 0030 1A6B     		ldr	r2, [r3, #48]
  74 0032 02F08002 		and	r2, r2, #128
  75 0036 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 5


  76              		.loc 1 154 3 view .LVU13
  77 0038 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 154 3 view .LVU14
 155:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 155 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 155 3 view .LVU16
  83 003a 0294     		str	r4, [sp, #8]
  84              		.loc 1 155 3 view .LVU17
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00202 		orr	r2, r2, #2
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 155 3 view .LVU18
  89 0044 1B6B     		ldr	r3, [r3, #48]
  90 0046 03F00203 		and	r3, r3, #2
  91 004a 0293     		str	r3, [sp, #8]
  92              		.loc 1 155 3 view .LVU19
  93 004c 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 155 3 view .LVU20
 156:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  96              		.loc 1 156 3 view .LVU21
  97 004e 0A4D     		ldr	r5, .L3+4
  98 0050 2246     		mov	r2, r4
  99 0052 FF21     		movs	r1, #255
 100 0054 2846     		mov	r0, r5
 101 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL0:
 157:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 158:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 103              		.loc 1 158 3 view .LVU22
 104              		.loc 1 158 23 is_stmt 0 view .LVU23
 105 005a FF23     		movs	r3, #255
 106 005c 0393     		str	r3, [sp, #12]
 159:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 160:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 160 3 is_stmt 1 view .LVU24
 108              		.loc 1 160 24 is_stmt 0 view .LVU25
 109 005e 0123     		movs	r3, #1
 110 0060 0493     		str	r3, [sp, #16]
 161:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 161 3 is_stmt 1 view .LVU26
 112              		.loc 1 161 24 is_stmt 0 view .LVU27
 113 0062 0594     		str	r4, [sp, #20]
 162:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 162 3 is_stmt 1 view .LVU28
 115              		.loc 1 162 25 is_stmt 0 view .LVU29
 116 0064 0694     		str	r4, [sp, #24]
 163:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 117              		.loc 1 163 3 is_stmt 1 view .LVU30
 118 0066 03A9     		add	r1, sp, #12
 119 0068 2846     		mov	r0, r5
 120 006a FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL1:
 164:Core/Src/main.c **** }
 122              		.loc 1 164 1 is_stmt 0 view .LVU31
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 6


 123 006e 09B0     		add	sp, sp, #36
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 12
 126              		@ sp needed
 127 0070 30BD     		pop	{r4, r5, pc}
 128              	.L4:
 129 0072 00BF     		.align	2
 130              	.L3:
 131 0074 00380240 		.word	1073887232
 132 0078 00040240 		.word	1073873920
 133              		.cfi_endproc
 134              	.LFE136:
 136              		.global	__aeabi_i2f
 137              		.global	__aeabi_fdiv
 138              		.global	__aeabi_fmul
 139              		.global	__aeabi_fsub
 140              		.global	__aeabi_fadd
 141              		.global	__aeabi_fcmple
 142              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 143              		.align	1
 144              		.global	calculate_mandelbrot_float
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	calculate_mandelbrot_float:
 150              	.LVL2:
 151              	.LFB137:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 167:Core/Src/main.c **** // --- ADDED FOR TASK 5 ---
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** // New float version for FPU testing
 170:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations) {
 152              		.loc 1 170 80 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 24
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		.loc 1 170 80 is_stmt 0 view .LVU33
 157 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 36
 160              		.cfi_offset 4, -36
 161              		.cfi_offset 5, -32
 162              		.cfi_offset 6, -28
 163              		.cfi_offset 7, -24
 164              		.cfi_offset 8, -20
 165              		.cfi_offset 9, -16
 166              		.cfi_offset 10, -12
 167              		.cfi_offset 11, -8
 168              		.cfi_offset 14, -4
 169 0004 87B0     		sub	sp, sp, #28
 170              	.LCFI4:
 171              		.cfi_def_cfa_offset 64
 172 0006 0190     		str	r0, [sp, #4]
 173 0008 0591     		str	r1, [sp, #20]
 174 000a 9146     		mov	r9, r2
 171:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 7


 175              		.loc 1 171 5 is_stmt 1 view .LVU34
 176              	.LVL3:
 172:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 177              		.loc 1 172 5 view .LVU35
 178              	.LBB7:
 179              		.loc 1 172 10 view .LVU36
 180              		.loc 1 172 14 is_stmt 0 view .LVU37
 181 000c 0022     		movs	r2, #0
 182              	.LVL4:
 183              		.loc 1 172 14 view .LVU38
 184              	.LBE7:
 171:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 185              		.loc 1 171 14 view .LVU39
 186 000e 0292     		str	r2, [sp, #8]
 187 0010 1546     		mov	r5, r2
 188              	.LBB13:
 189              		.loc 1 172 5 view .LVU40
 190 0012 67E0     		b	.L6
 191              	.LVL5:
 192              	.L9:
 193              	.LBB8:
 194              	.LBB9:
 195              	.LBB10:
 173:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 174:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 175:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 176:Core/Src/main.c ****             float z_real = 0.0f;
 177:Core/Src/main.c ****             float z_imag = 0.0f;
 178:Core/Src/main.c ****             int iteration = 0;
 179:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0f) {
 180:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 196              		.loc 1 180 17 is_stmt 1 view .LVU41
 197              		.loc 1 180 52 is_stmt 0 view .LVU42
 198 0014 3946     		mov	r1, r7
 199 0016 3046     		mov	r0, r6
 200 0018 FFF7FEFF 		bl	__aeabi_fsub
 201              	.LVL6:
 202              		.loc 1 180 23 view .LVU43
 203 001c 5946     		mov	r1, fp
 204 001e FFF7FEFF 		bl	__aeabi_fadd
 205              	.LVL7:
 206 0022 0646     		mov	r6, r0
 207              	.LVL8:
 181:Core/Src/main.c ****                 z_imag = 2.0f * z_real * z_imag + c_imag;
 208              		.loc 1 181 17 is_stmt 1 view .LVU44
 209              		.loc 1 181 31 is_stmt 0 view .LVU45
 210 0024 2146     		mov	r1, r4
 211 0026 2046     		mov	r0, r4
 212              	.LVL9:
 213              		.loc 1 181 31 view .LVU46
 214 0028 FFF7FEFF 		bl	__aeabi_fadd
 215              	.LVL10:
 216              		.loc 1 181 40 view .LVU47
 217 002c 2946     		mov	r1, r5
 218 002e FFF7FEFF 		bl	__aeabi_fmul
 219              	.LVL11:
 220              		.loc 1 181 24 view .LVU48
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 8


 221 0032 5146     		mov	r1, r10
 222 0034 FFF7FEFF 		bl	__aeabi_fadd
 223              	.LVL12:
 224 0038 0546     		mov	r5, r0
 225              	.LVL13:
 182:Core/Src/main.c ****                 z_real = z_real_new;
 226              		.loc 1 182 17 is_stmt 1 view .LVU49
 183:Core/Src/main.c ****                 iteration++;
 227              		.loc 1 183 17 view .LVU50
 228              		.loc 1 183 26 is_stmt 0 view .LVU51
 229 003a 08F10108 		add	r8, r8, #1
 230              	.LVL14:
 182:Core/Src/main.c ****                 z_real = z_real_new;
 231              		.loc 1 182 24 view .LVU52
 232 003e 3446     		mov	r4, r6
 233              	.LVL15:
 234              	.L7:
 182:Core/Src/main.c ****                 z_real = z_real_new;
 235              		.loc 1 182 24 view .LVU53
 236              	.LBE10:
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 237              		.loc 1 179 47 is_stmt 1 view .LVU54
 238 0040 C845     		cmp	r8, r9
 239 0042 13DA     		bge	.L8
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 240              		.loc 1 179 58 is_stmt 0 discriminator 1 view .LVU55
 241 0044 2146     		mov	r1, r4
 242 0046 2046     		mov	r0, r4
 243 0048 FFF7FEFF 		bl	__aeabi_fmul
 244              	.LVL16:
 245 004c 0646     		mov	r6, r0
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 246              		.loc 1 179 76 discriminator 1 view .LVU56
 247 004e 2946     		mov	r1, r5
 248 0050 2846     		mov	r0, r5
 249 0052 FFF7FEFF 		bl	__aeabi_fmul
 250              	.LVL17:
 251 0056 0746     		mov	r7, r0
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 252              		.loc 1 179 67 discriminator 1 view .LVU57
 253 0058 0146     		mov	r1, r0
 254 005a 3046     		mov	r0, r6
 255 005c FFF7FEFF 		bl	__aeabi_fadd
 256              	.LVL18:
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 257              		.loc 1 179 47 discriminator 1 view .LVU58
 258 0060 4FF08141 		mov	r1, #1082130432
 259 0064 FFF7FEFF 		bl	__aeabi_fcmple
 260              	.LVL19:
 261 0068 0028     		cmp	r0, #0
 262 006a D3D1     		bne	.L9
 263              	.L8:
 184:Core/Src/main.c ****             }
 185:Core/Src/main.c ****             mandelbrot_sum += iteration;
 264              		.loc 1 185 28 view .LVU59
 265 006c 039F     		ldr	r7, [sp, #12]
 266              		.loc 1 185 13 is_stmt 1 view .LVU60
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 9


 267              		.loc 1 185 28 is_stmt 0 view .LVU61
 268 006e 029B     		ldr	r3, [sp, #8]
 269 0070 18EB0302 		adds	r2, r8, r3
 270 0074 0292     		str	r2, [sp, #8]
 271              	.LVL20:
 272              		.loc 1 185 28 view .LVU62
 273 0076 47EBE877 		adc	r7, r7, r8, asr #31
 274              	.LVL21:
 275              		.loc 1 185 28 view .LVU63
 276              	.LBE9:
 173:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 277              		.loc 1 173 37 is_stmt 1 discriminator 2 view .LVU64
 278 007a 009B     		ldr	r3, [sp]
 279 007c 0133     		adds	r3, r3, #1
 280 007e 0093     		str	r3, [sp]
 281              	.LVL22:
 282              	.L11:
 173:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 283              		.loc 1 173 27 discriminator 1 view .LVU65
 284 0080 009B     		ldr	r3, [sp]
 285 0082 019A     		ldr	r2, [sp, #4]
 286 0084 9342     		cmp	r3, r2
 287 0086 2ADA     		bge	.L14
 288              	.LBB11:
 174:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 289              		.loc 1 174 13 view .LVU66
 174:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 290              		.loc 1 174 29 is_stmt 0 view .LVU67
 291 0088 0098     		ldr	r0, [sp]
 292 008a FFF7FEFF 		bl	__aeabi_i2f
 293              	.LVL23:
 294 008e 0446     		mov	r4, r0
 174:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 295              		.loc 1 174 38 view .LVU68
 296 0090 0198     		ldr	r0, [sp, #4]
 297 0092 FFF7FEFF 		bl	__aeabi_i2f
 298              	.LVL24:
 299 0096 0146     		mov	r1, r0
 300 0098 2046     		mov	r0, r4
 301 009a FFF7FEFF 		bl	__aeabi_fdiv
 302              	.LVL25:
 174:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 303              		.loc 1 174 47 view .LVU69
 304 009e 1849     		ldr	r1, .L16
 305 00a0 FFF7FEFF 		bl	__aeabi_fmul
 306              	.LVL26:
 174:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 307              		.loc 1 174 19 view .LVU70
 308 00a4 1749     		ldr	r1, .L16+4
 309 00a6 FFF7FEFF 		bl	__aeabi_fsub
 310              	.LVL27:
 311 00aa 8346     		mov	fp, r0
 312              	.LVL28:
 175:Core/Src/main.c ****             float z_real = 0.0f;
 313              		.loc 1 175 13 is_stmt 1 view .LVU71
 175:Core/Src/main.c ****             float z_real = 0.0f;
 314              		.loc 1 175 29 is_stmt 0 view .LVU72
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 10


 315 00ac 0498     		ldr	r0, [sp, #16]
 316              	.LVL29:
 175:Core/Src/main.c ****             float z_real = 0.0f;
 317              		.loc 1 175 29 view .LVU73
 318 00ae FFF7FEFF 		bl	__aeabi_i2f
 319              	.LVL30:
 320 00b2 0446     		mov	r4, r0
 175:Core/Src/main.c ****             float z_real = 0.0f;
 321              		.loc 1 175 38 view .LVU74
 322 00b4 0598     		ldr	r0, [sp, #20]
 323 00b6 FFF7FEFF 		bl	__aeabi_i2f
 324              	.LVL31:
 325 00ba 0146     		mov	r1, r0
 326 00bc 2046     		mov	r0, r4
 327 00be FFF7FEFF 		bl	__aeabi_fdiv
 328              	.LVL32:
 329 00c2 0146     		mov	r1, r0
 175:Core/Src/main.c ****             float z_real = 0.0f;
 330              		.loc 1 175 48 view .LVU75
 331 00c4 FFF7FEFF 		bl	__aeabi_fadd
 332              	.LVL33:
 175:Core/Src/main.c ****             float z_real = 0.0f;
 333              		.loc 1 175 19 view .LVU76
 334 00c8 4FF07E51 		mov	r1, #1065353216
 335 00cc FFF7FEFF 		bl	__aeabi_fsub
 336              	.LVL34:
 337 00d0 8246     		mov	r10, r0
 338              	.LVL35:
 176:Core/Src/main.c ****             float z_imag = 0.0f;
 339              		.loc 1 176 13 is_stmt 1 view .LVU77
 177:Core/Src/main.c ****             int iteration = 0;
 340              		.loc 1 177 13 view .LVU78
 178:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0f) {
 341              		.loc 1 178 13 view .LVU79
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 342              		.loc 1 179 13 view .LVU80
 178:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0f) {
 343              		.loc 1 178 17 is_stmt 0 view .LVU81
 344 00d2 4FF00008 		mov	r8, #0
 177:Core/Src/main.c ****             int iteration = 0;
 345              		.loc 1 177 19 view .LVU82
 346 00d6 0025     		movs	r5, #0
 176:Core/Src/main.c ****             float z_imag = 0.0f;
 347              		.loc 1 176 19 view .LVU83
 348 00d8 2C46     		mov	r4, r5
 349 00da 0397     		str	r7, [sp, #12]
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 350              		.loc 1 179 19 view .LVU84
 351 00dc B0E7     		b	.L7
 352              	.LVL36:
 353              	.L14:
 179:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 354              		.loc 1 179 19 view .LVU85
 355              	.LBE11:
 356              	.LBE8:
 172:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 357              		.loc 1 172 34 discriminator 2 view .LVU86
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 11


 358 00de 049A     		ldr	r2, [sp, #16]
 359 00e0 3D46     		mov	r5, r7
 172:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 360              		.loc 1 172 34 is_stmt 1 discriminator 2 view .LVU87
 361 00e2 0132     		adds	r2, r2, #1
 362              	.LVL37:
 363              	.L6:
 172:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 364              		.loc 1 172 23 discriminator 1 view .LVU88
 365 00e4 059B     		ldr	r3, [sp, #20]
 366 00e6 9A42     		cmp	r2, r3
 367 00e8 04DA     		bge	.L15
 368              	.LBB12:
 173:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 369              		.loc 1 173 18 is_stmt 0 view .LVU89
 370 00ea 0026     		movs	r6, #0
 371 00ec 0492     		str	r2, [sp, #16]
 372 00ee 0096     		str	r6, [sp]
 373 00f0 2F46     		mov	r7, r5
 374 00f2 C5E7     		b	.L11
 375              	.L15:
 173:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 376              		.loc 1 173 18 view .LVU90
 377              	.LBE12:
 378              	.LBE13:
 186:Core/Src/main.c ****         }
 187:Core/Src/main.c ****     }
 188:Core/Src/main.c ****     return mandelbrot_sum;
 379              		.loc 1 188 5 is_stmt 1 view .LVU91
 189:Core/Src/main.c **** }
 380              		.loc 1 189 1 is_stmt 0 view .LVU92
 381 00f4 0298     		ldr	r0, [sp, #8]
 382 00f6 2946     		mov	r1, r5
 383 00f8 07B0     		add	sp, sp, #28
 384              	.LCFI5:
 385              		.cfi_def_cfa_offset 36
 386              		@ sp needed
 387 00fa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 388              	.LVL38:
 389              	.L17:
 390              		.loc 1 189 1 view .LVU93
 391 00fe 00BF     		.align	2
 392              	.L16:
 393 0100 00006040 		.word	1080033280
 394 0104 00002040 		.word	1075838976
 395              		.cfi_endproc
 396              	.LFE137:
 398              		.global	__aeabi_i2d
 399              		.global	__aeabi_ddiv
 400              		.global	__aeabi_dmul
 401              		.global	__aeabi_dsub
 402              		.global	__aeabi_dadd
 403              		.global	__aeabi_dcmple
 404              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 405              		.align	1
 406              		.global	calculate_mandelbrot_double
 407              		.syntax unified
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 12


 408              		.thumb
 409              		.thumb_func
 411              	calculate_mandelbrot_double:
 412              	.LVL39:
 413              	.LFB138:
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** // Standard double-precision version
 192:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 414              		.loc 1 192 80 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 56
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		.loc 1 192 80 is_stmt 0 view .LVU95
 419 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 420              	.LCFI6:
 421              		.cfi_def_cfa_offset 36
 422              		.cfi_offset 4, -36
 423              		.cfi_offset 5, -32
 424              		.cfi_offset 6, -28
 425              		.cfi_offset 7, -24
 426              		.cfi_offset 8, -20
 427              		.cfi_offset 9, -16
 428              		.cfi_offset 10, -12
 429              		.cfi_offset 11, -8
 430              		.cfi_offset 14, -4
 431 0004 8FB0     		sub	sp, sp, #60
 432              	.LCFI7:
 433              		.cfi_def_cfa_offset 96
 434 0006 8346     		mov	fp, r0
 435 0008 0C91     		str	r1, [sp, #48]
 436 000a 0D92     		str	r2, [sp, #52]
 193:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 437              		.loc 1 193 5 is_stmt 1 view .LVU96
 438              	.LVL40:
 194:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 439              		.loc 1 194 5 view .LVU97
 440              	.LBB14:
 441              		.loc 1 194 10 view .LVU98
 442              		.loc 1 194 14 is_stmt 0 view .LVU99
 443 000c 4FF0000C 		mov	ip, #0
 444              	.LBE14:
 193:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 445              		.loc 1 193 14 view .LVU100
 446 0010 CDF81CC0 		str	ip, [sp, #28]
 447 0014 CDF820C0 		str	ip, [sp, #32]
 448              	.LBB20:
 449              		.loc 1 194 5 view .LVU101
 450 0018 93E0     		b	.L19
 451              	.LVL41:
 452              	.L22:
 453              	.LBB15:
 454              	.LBB16:
 455              	.LBB17:
 195:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 196:Core/Src/main.c ****             double c_real = ((double)x / width) * 3.5 - 2.5;
 197:Core/Src/main.c ****             double c_imag = ((double)y / height) * 2.0 - 1.0;
 198:Core/Src/main.c ****             double z_real = 0.0;
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 13


 199:Core/Src/main.c ****             double z_imag = 0.0;
 200:Core/Src/main.c ****             int iteration = 0;
 201:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0) {
 202:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 456              		.loc 1 202 17 is_stmt 1 view .LVU102
 457              		.loc 1 202 53 is_stmt 0 view .LVU103
 458 001a 4246     		mov	r2, r8
 459 001c 4B46     		mov	r3, r9
 460 001e DDE90001 		ldrd	r0, [sp]
 461 0022 FFF7FEFF 		bl	__aeabi_dsub
 462              	.LVL42:
 463              		.loc 1 202 24 view .LVU104
 464 0026 DDE90223 		ldrd	r2, [sp, #8]
 465 002a FFF7FEFF 		bl	__aeabi_dadd
 466              	.LVL43:
 467 002e 8046     		mov	r8, r0
 468 0030 8946     		mov	r9, r1
 469              	.LVL44:
 203:Core/Src/main.c ****                 z_imag = 2 * z_real * z_imag + c_imag;
 470              		.loc 1 203 17 is_stmt 1 view .LVU105
 471              		.loc 1 203 28 is_stmt 0 view .LVU106
 472 0032 2246     		mov	r2, r4
 473 0034 2B46     		mov	r3, r5
 474 0036 2046     		mov	r0, r4
 475 0038 2946     		mov	r1, r5
 476 003a FFF7FEFF 		bl	__aeabi_dadd
 477              	.LVL45:
 478              		.loc 1 203 37 view .LVU107
 479 003e 3246     		mov	r2, r6
 480 0040 3B46     		mov	r3, r7
 481 0042 FFF7FEFF 		bl	__aeabi_dmul
 482              	.LVL46:
 483              		.loc 1 203 24 view .LVU108
 484 0046 DDE90423 		ldrd	r2, [sp, #16]
 485 004a FFF7FEFF 		bl	__aeabi_dadd
 486              	.LVL47:
 487 004e 0646     		mov	r6, r0
 488              	.LVL48:
 489              		.loc 1 203 24 view .LVU109
 490 0050 0F46     		mov	r7, r1
 491              	.LVL49:
 204:Core/Src/main.c ****                 z_real = z_real_new;
 492              		.loc 1 204 17 is_stmt 1 view .LVU110
 205:Core/Src/main.c ****                 iteration++;
 493              		.loc 1 205 17 view .LVU111
 494              		.loc 1 205 26 is_stmt 0 view .LVU112
 495 0052 0AF1010A 		add	r10, r10, #1
 496              	.LVL50:
 204:Core/Src/main.c ****                 z_real = z_real_new;
 497              		.loc 1 204 24 view .LVU113
 498 0056 4446     		mov	r4, r8
 499 0058 4D46     		mov	r5, r9
 500              	.LVL51:
 501              	.L20:
 204:Core/Src/main.c ****                 z_real = z_real_new;
 502              		.loc 1 204 24 view .LVU114
 503              	.LBE17:
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 14


 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 504              		.loc 1 201 47 is_stmt 1 view .LVU115
 505 005a DA45     		cmp	r10, fp
 506 005c 1BDA     		bge	.L21
 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 507              		.loc 1 201 58 is_stmt 0 discriminator 1 view .LVU116
 508 005e 2246     		mov	r2, r4
 509 0060 2B46     		mov	r3, r5
 510 0062 2046     		mov	r0, r4
 511 0064 2946     		mov	r1, r5
 512 0066 FFF7FEFF 		bl	__aeabi_dmul
 513              	.LVL52:
 514 006a CDE90001 		strd	r0, [sp]
 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 515              		.loc 1 201 76 discriminator 1 view .LVU117
 516 006e 3246     		mov	r2, r6
 517 0070 3B46     		mov	r3, r7
 518 0072 3046     		mov	r0, r6
 519 0074 3946     		mov	r1, r7
 520 0076 FFF7FEFF 		bl	__aeabi_dmul
 521              	.LVL53:
 522 007a 8046     		mov	r8, r0
 523 007c 8946     		mov	r9, r1
 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 524              		.loc 1 201 67 discriminator 1 view .LVU118
 525 007e 0246     		mov	r2, r0
 526 0080 0B46     		mov	r3, r1
 527 0082 DDE90001 		ldrd	r0, [sp]
 528 0086 FFF7FEFF 		bl	__aeabi_dadd
 529              	.LVL54:
 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 530              		.loc 1 201 47 discriminator 1 view .LVU119
 531 008a 0022     		movs	r2, #0
 532 008c 364B     		ldr	r3, .L29
 533 008e FFF7FEFF 		bl	__aeabi_dcmple
 534              	.LVL55:
 535 0092 0028     		cmp	r0, #0
 536 0094 C1D1     		bne	.L22
 537              	.L21:
 206:Core/Src/main.c ****             }
 207:Core/Src/main.c ****             mandelbrot_sum += iteration;
 538              		.loc 1 207 28 view .LVU120
 539 0096 DDF82490 		ldr	r9, [sp, #36]
 540 009a DDF82880 		ldr	r8, [sp, #40]
 541 009e 5B46     		mov	r3, fp
 542 00a0 D346     		mov	fp, r10
 543 00a2 9A46     		mov	r10, r3
 544              	.LVL56:
 545              		.loc 1 207 13 is_stmt 1 view .LVU121
 546              		.loc 1 207 28 is_stmt 0 view .LVU122
 547 00a4 079B     		ldr	r3, [sp, #28]
 548 00a6 1BEB0302 		adds	r2, fp, r3
 549 00aa 0792     		str	r2, [sp, #28]
 550              	.LVL57:
 551              		.loc 1 207 28 view .LVU123
 552 00ac 089B     		ldr	r3, [sp, #32]
 553 00ae 43EBEB73 		adc	r3, r3, fp, asr #31
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 15


 554 00b2 0893     		str	r3, [sp, #32]
 555              	.LVL58:
 556              		.loc 1 207 28 view .LVU124
 557              	.LBE16:
 195:Core/Src/main.c ****             double c_real = ((double)x / width) * 3.5 - 2.5;
 558              		.loc 1 195 37 is_stmt 1 discriminator 2 view .LVU125
 559 00b4 09F10109 		add	r9, r9, #1
 560              	.LVL59:
 561              	.L24:
 195:Core/Src/main.c ****             double c_real = ((double)x / width) * 3.5 - 2.5;
 562              		.loc 1 195 27 discriminator 1 view .LVU126
 563 00b8 C145     		cmp	r9, r8
 564 00ba 3DDA     		bge	.L27
 565              	.LBB18:
 196:Core/Src/main.c ****             double c_imag = ((double)y / height) * 2.0 - 1.0;
 566              		.loc 1 196 13 view .LVU127
 196:Core/Src/main.c ****             double c_imag = ((double)y / height) * 2.0 - 1.0;
 567              		.loc 1 196 30 is_stmt 0 view .LVU128
 568 00bc 4846     		mov	r0, r9
 569 00be FFF7FEFF 		bl	__aeabi_i2d
 570              	.LVL60:
 571 00c2 0446     		mov	r4, r0
 572 00c4 0D46     		mov	r5, r1
 196:Core/Src/main.c ****             double c_imag = ((double)y / height) * 2.0 - 1.0;
 573              		.loc 1 196 40 view .LVU129
 574 00c6 4046     		mov	r0, r8
 575 00c8 FFF7FEFF 		bl	__aeabi_i2d
 576              	.LVL61:
 577 00cc 0246     		mov	r2, r0
 578 00ce 0B46     		mov	r3, r1
 579 00d0 2046     		mov	r0, r4
 580 00d2 2946     		mov	r1, r5
 581 00d4 FFF7FEFF 		bl	__aeabi_ddiv
 582              	.LVL62:
 196:Core/Src/main.c ****             double c_imag = ((double)y / height) * 2.0 - 1.0;
 583              		.loc 1 196 49 view .LVU130
 584 00d8 0022     		movs	r2, #0
 585 00da 244B     		ldr	r3, .L29+4
 586 00dc FFF7FEFF 		bl	__aeabi_dmul
 587              	.LVL63:
 196:Core/Src/main.c ****             double c_imag = ((double)y / height) * 2.0 - 1.0;
 588              		.loc 1 196 20 view .LVU131
 589 00e0 0022     		movs	r2, #0
 590 00e2 234B     		ldr	r3, .L29+8
 591 00e4 FFF7FEFF 		bl	__aeabi_dsub
 592              	.LVL64:
 593 00e8 CDE90201 		strd	r0, [sp, #8]
 594              	.LVL65:
 197:Core/Src/main.c ****             double z_real = 0.0;
 595              		.loc 1 197 13 is_stmt 1 view .LVU132
 197:Core/Src/main.c ****             double z_real = 0.0;
 596              		.loc 1 197 30 is_stmt 0 view .LVU133
 597 00ec 0B98     		ldr	r0, [sp, #44]
 598              	.LVL66:
 197:Core/Src/main.c ****             double z_real = 0.0;
 599              		.loc 1 197 30 view .LVU134
 600 00ee FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 16


 601              	.LVL67:
 602 00f2 0446     		mov	r4, r0
 603 00f4 0D46     		mov	r5, r1
 197:Core/Src/main.c ****             double z_real = 0.0;
 604              		.loc 1 197 40 view .LVU135
 605 00f6 0C98     		ldr	r0, [sp, #48]
 606 00f8 FFF7FEFF 		bl	__aeabi_i2d
 607              	.LVL68:
 608 00fc 0246     		mov	r2, r0
 609 00fe 0B46     		mov	r3, r1
 610 0100 2046     		mov	r0, r4
 611 0102 2946     		mov	r1, r5
 612 0104 FFF7FEFF 		bl	__aeabi_ddiv
 613              	.LVL69:
 614 0108 0246     		mov	r2, r0
 615 010a 0B46     		mov	r3, r1
 197:Core/Src/main.c ****             double z_real = 0.0;
 616              		.loc 1 197 50 view .LVU136
 617 010c FFF7FEFF 		bl	__aeabi_dadd
 618              	.LVL70:
 197:Core/Src/main.c ****             double z_real = 0.0;
 619              		.loc 1 197 20 view .LVU137
 620 0110 0022     		movs	r2, #0
 621 0112 184B     		ldr	r3, .L29+12
 622 0114 FFF7FEFF 		bl	__aeabi_dsub
 623              	.LVL71:
 624 0118 CDE90401 		strd	r0, [sp, #16]
 625              	.LVL72:
 198:Core/Src/main.c ****             double z_imag = 0.0;
 626              		.loc 1 198 13 is_stmt 1 view .LVU138
 199:Core/Src/main.c ****             int iteration = 0;
 627              		.loc 1 199 13 view .LVU139
 200:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0) {
 628              		.loc 1 200 13 view .LVU140
 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 629              		.loc 1 201 13 view .LVU141
 200:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0) {
 630              		.loc 1 200 17 is_stmt 0 view .LVU142
 631 011c 4FF0000B 		mov	fp, #0
 199:Core/Src/main.c ****             int iteration = 0;
 632              		.loc 1 199 20 view .LVU143
 633 0120 0026     		movs	r6, #0
 634 0122 0027     		movs	r7, #0
 198:Core/Src/main.c ****             double z_imag = 0.0;
 635              		.loc 1 198 20 view .LVU144
 636 0124 3446     		mov	r4, r6
 637 0126 3D46     		mov	r5, r7
 638 0128 CDF82490 		str	r9, [sp, #36]
 639 012c CDF82880 		str	r8, [sp, #40]
 640 0130 5346     		mov	r3, r10
 641 0132 DA46     		mov	r10, fp
 642 0134 9B46     		mov	fp, r3
 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 643              		.loc 1 201 19 view .LVU145
 644 0136 90E7     		b	.L20
 645              	.LVL73:
 646              	.L27:
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 17


 201:Core/Src/main.c ****                 double z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 647              		.loc 1 201 19 view .LVU146
 648              	.LBE18:
 649              	.LBE15:
 194:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 650              		.loc 1 194 34 discriminator 2 view .LVU147
 651 0138 DDF82CC0 		ldr	ip, [sp, #44]
 652 013c C346     		mov	fp, r8
 194:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 653              		.loc 1 194 34 is_stmt 1 discriminator 2 view .LVU148
 654 013e 0CF1010C 		add	ip, ip, #1
 655              	.LVL74:
 656              	.L19:
 194:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 657              		.loc 1 194 23 discriminator 1 view .LVU149
 658 0142 0C9B     		ldr	r3, [sp, #48]
 659 0144 9C45     		cmp	ip, r3
 660 0146 08DA     		bge	.L28
 661              	.LBB19:
 195:Core/Src/main.c ****             double c_real = ((double)x / width) * 3.5 - 2.5;
 662              		.loc 1 195 18 is_stmt 0 view .LVU150
 663 0148 4FF0000A 		mov	r10, #0
 664 014c CDF82CC0 		str	ip, [sp, #44]
 665 0150 D146     		mov	r9, r10
 666 0152 D846     		mov	r8, fp
 667 0154 DDF834A0 		ldr	r10, [sp, #52]
 668 0158 AEE7     		b	.L24
 669              	.L28:
 195:Core/Src/main.c ****             double c_real = ((double)x / width) * 3.5 - 2.5;
 670              		.loc 1 195 18 view .LVU151
 671              	.LBE19:
 672              	.LBE20:
 208:Core/Src/main.c ****         }
 209:Core/Src/main.c ****     }
 210:Core/Src/main.c ****     return mandelbrot_sum;
 211:Core/Src/main.c **** }
 673              		.loc 1 211 1 view .LVU152
 674 015a DDF82090 		ldr	r9, [sp, #32]
 210:Core/Src/main.c **** }
 675              		.loc 1 210 5 is_stmt 1 view .LVU153
 676              		.loc 1 211 1 is_stmt 0 view .LVU154
 677 015e 0798     		ldr	r0, [sp, #28]
 678 0160 4946     		mov	r1, r9
 679 0162 0FB0     		add	sp, sp, #60
 680              	.LCFI8:
 681              		.cfi_def_cfa_offset 36
 682              		@ sp needed
 683 0164 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 684              	.LVL75:
 685              	.L30:
 686              		.loc 1 211 1 view .LVU155
 687              		.align	2
 688              	.L29:
 689 0168 00001040 		.word	1074790400
 690 016c 00000C40 		.word	1074528256
 691 0170 00000440 		.word	1074003968
 692 0174 0000F03F 		.word	1072693248
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 18


 693              		.cfi_endproc
 694              	.LFE138:
 696              		.section	.text.Error_Handler,"ax",%progbits
 697              		.align	1
 698              		.global	Error_Handler
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 703              	Error_Handler:
 704              	.LFB139:
 212:Core/Src/main.c **** // --- END OF ADDED CODE ---
 213:Core/Src/main.c **** /* USER CODE END 4 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /**
 216:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** void Error_Handler(void)
 219:Core/Src/main.c **** {
 705              		.loc 1 219 1 is_stmt 1 view -0
 706              		.cfi_startproc
 707              		@ Volatile: function does not return.
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 220:Core/Src/main.c ****   __disable_irq();
 711              		.loc 1 220 3 view .LVU157
 712              	.LBB21:
 713              	.LBI21:
 714              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 19


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 20


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 21


 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 22


 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 23


 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 24


 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 25


 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 26


 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 27


 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 28


 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 29


 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 30


 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 31


 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 32


 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 33


 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 34


 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 35


 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 715              		.loc 2 960 27 view .LVU158
 716              	.LBB22:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 717              		.loc 2 962 3 view .LVU159
 718              		.syntax unified
 719              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 720 0000 72B6     		cpsid i
 721              	@ 0 "" 2
 722              		.thumb
 723              		.syntax unified
 724              	.L32:
 725              	.LBE22:
 726              	.LBE21:
 221:Core/Src/main.c ****   while (1)
 727              		.loc 1 221 3 view .LVU160
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****   }
 728              		.loc 1 223 3 view .LVU161
 221:Core/Src/main.c ****   while (1)
 729              		.loc 1 221 9 view .LVU162
 730 0002 FEE7     		b	.L32
 731              		.cfi_endproc
 732              	.LFE139:
 734              		.section	.text.SystemClock_Config,"ax",%progbits
 735              		.align	1
 736              		.global	SystemClock_Config
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 741              	SystemClock_Config:
 742              	.LFB135:
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 743              		.loc 1 117 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 80
 746              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 36


 747 0000 00B5     		push	{lr}
 748              	.LCFI9:
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 14, -4
 751 0002 95B0     		sub	sp, sp, #84
 752              	.LCFI10:
 753              		.cfi_def_cfa_offset 88
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 754              		.loc 1 118 3 view .LVU164
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 755              		.loc 1 118 22 is_stmt 0 view .LVU165
 756 0004 3422     		movs	r2, #52
 757 0006 0021     		movs	r1, #0
 758 0008 07A8     		add	r0, sp, #28
 759 000a FFF7FEFF 		bl	memset
 760              	.LVL76:
 119:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 761              		.loc 1 119 3 is_stmt 1 view .LVU166
 119:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 762              		.loc 1 119 22 is_stmt 0 view .LVU167
 763 000e 0023     		movs	r3, #0
 764 0010 0293     		str	r3, [sp, #8]
 765 0012 0393     		str	r3, [sp, #12]
 766 0014 0493     		str	r3, [sp, #16]
 767 0016 0593     		str	r3, [sp, #20]
 768 0018 0693     		str	r3, [sp, #24]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 769              		.loc 1 120 3 is_stmt 1 view .LVU168
 770              	.LBB23:
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 771              		.loc 1 120 3 view .LVU169
 772 001a 0093     		str	r3, [sp]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 773              		.loc 1 120 3 view .LVU170
 774 001c 214A     		ldr	r2, .L39
 775 001e 116C     		ldr	r1, [r2, #64]
 776 0020 41F08051 		orr	r1, r1, #268435456
 777 0024 1164     		str	r1, [r2, #64]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 778              		.loc 1 120 3 view .LVU171
 779 0026 126C     		ldr	r2, [r2, #64]
 780 0028 02F08052 		and	r2, r2, #268435456
 781 002c 0092     		str	r2, [sp]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 782              		.loc 1 120 3 view .LVU172
 783 002e 009A     		ldr	r2, [sp]
 784              	.LBE23:
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 785              		.loc 1 120 3 view .LVU173
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 786              		.loc 1 121 3 view .LVU174
 787              	.LBB24:
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 788              		.loc 1 121 3 view .LVU175
 789 0030 0193     		str	r3, [sp, #4]
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 790              		.loc 1 121 3 view .LVU176
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 37


 791 0032 1D4A     		ldr	r2, .L39+4
 792 0034 1368     		ldr	r3, [r2]
 793 0036 23F44043 		bic	r3, r3, #49152
 794 003a 43F48043 		orr	r3, r3, #16384
 795 003e 1360     		str	r3, [r2]
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 796              		.loc 1 121 3 view .LVU177
 797 0040 1368     		ldr	r3, [r2]
 798 0042 03F44043 		and	r3, r3, #49152
 799 0046 0193     		str	r3, [sp, #4]
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800              		.loc 1 121 3 view .LVU178
 801 0048 019B     		ldr	r3, [sp, #4]
 802              	.LBE24:
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 803              		.loc 1 121 3 view .LVU179
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 804              		.loc 1 122 3 view .LVU180
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 805              		.loc 1 122 36 is_stmt 0 view .LVU181
 806 004a 0123     		movs	r3, #1
 807 004c 0793     		str	r3, [sp, #28]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 808              		.loc 1 123 3 is_stmt 1 view .LVU182
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 809              		.loc 1 123 30 is_stmt 0 view .LVU183
 810 004e 4FF48033 		mov	r3, #65536
 811 0052 0893     		str	r3, [sp, #32]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 812              		.loc 1 124 3 is_stmt 1 view .LVU184
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 813              		.loc 1 124 34 is_stmt 0 view .LVU185
 814 0054 0223     		movs	r3, #2
 815 0056 0D93     		str	r3, [sp, #52]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 816              		.loc 1 125 3 is_stmt 1 view .LVU186
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 817              		.loc 1 125 35 is_stmt 0 view .LVU187
 818 0058 4FF48002 		mov	r2, #4194304
 819 005c 0E92     		str	r2, [sp, #56]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 820              		.loc 1 126 3 is_stmt 1 view .LVU188
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 821              		.loc 1 126 30 is_stmt 0 view .LVU189
 822 005e 0F22     		movs	r2, #15
 823 0060 0F92     		str	r2, [sp, #60]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 824              		.loc 1 127 3 is_stmt 1 view .LVU190
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 825              		.loc 1 127 30 is_stmt 0 view .LVU191
 826 0062 9022     		movs	r2, #144
 827 0064 1092     		str	r2, [sp, #64]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 828              		.loc 1 128 3 is_stmt 1 view .LVU192
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 829              		.loc 1 128 30 is_stmt 0 view .LVU193
 830 0066 1193     		str	r3, [sp, #68]
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 38


 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 831              		.loc 1 129 3 is_stmt 1 view .LVU194
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 832              		.loc 1 129 30 is_stmt 0 view .LVU195
 833 0068 1293     		str	r3, [sp, #72]
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 834              		.loc 1 130 3 is_stmt 1 view .LVU196
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 835              		.loc 1 130 30 is_stmt 0 view .LVU197
 836 006a 1393     		str	r3, [sp, #76]
 131:Core/Src/main.c ****   {
 837              		.loc 1 131 3 is_stmt 1 view .LVU198
 131:Core/Src/main.c ****   {
 838              		.loc 1 131 7 is_stmt 0 view .LVU199
 839 006c 07A8     		add	r0, sp, #28
 840 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 841              	.LVL77:
 131:Core/Src/main.c ****   {
 842              		.loc 1 131 6 discriminator 1 view .LVU200
 843 0072 98B9     		cbnz	r0, .L37
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 844              		.loc 1 135 3 is_stmt 1 view .LVU201
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 845              		.loc 1 135 31 is_stmt 0 view .LVU202
 846 0074 0F23     		movs	r3, #15
 847 0076 0293     		str	r3, [sp, #8]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 848              		.loc 1 137 3 is_stmt 1 view .LVU203
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 849              		.loc 1 137 34 is_stmt 0 view .LVU204
 850 0078 0223     		movs	r3, #2
 851 007a 0393     		str	r3, [sp, #12]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 852              		.loc 1 138 3 is_stmt 1 view .LVU205
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 853              		.loc 1 138 35 is_stmt 0 view .LVU206
 854 007c 0023     		movs	r3, #0
 855 007e 0493     		str	r3, [sp, #16]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 856              		.loc 1 139 3 is_stmt 1 view .LVU207
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 857              		.loc 1 139 36 is_stmt 0 view .LVU208
 858 0080 4FF4A053 		mov	r3, #5120
 859 0084 0593     		str	r3, [sp, #20]
 140:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 860              		.loc 1 140 3 is_stmt 1 view .LVU209
 140:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 861              		.loc 1 140 36 is_stmt 0 view .LVU210
 862 0086 4FF48053 		mov	r3, #4096
 863 008a 0693     		str	r3, [sp, #24]
 141:Core/Src/main.c ****   {
 864              		.loc 1 141 3 is_stmt 1 view .LVU211
 141:Core/Src/main.c ****   {
 865              		.loc 1 141 7 is_stmt 0 view .LVU212
 866 008c 0321     		movs	r1, #3
 867 008e 02A8     		add	r0, sp, #8
 868 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 39


 869              	.LVL78:
 141:Core/Src/main.c ****   {
 870              		.loc 1 141 6 discriminator 1 view .LVU213
 871 0094 20B9     		cbnz	r0, .L38
 145:Core/Src/main.c **** 
 872              		.loc 1 145 1 view .LVU214
 873 0096 15B0     		add	sp, sp, #84
 874              	.LCFI11:
 875              		.cfi_remember_state
 876              		.cfi_def_cfa_offset 4
 877              		@ sp needed
 878 0098 5DF804FB 		ldr	pc, [sp], #4
 879              	.L37:
 880              	.LCFI12:
 881              		.cfi_restore_state
 133:Core/Src/main.c ****   }
 882              		.loc 1 133 5 is_stmt 1 view .LVU215
 883 009c FFF7FEFF 		bl	Error_Handler
 884              	.LVL79:
 885              	.L38:
 143:Core/Src/main.c ****   }
 886              		.loc 1 143 5 view .LVU216
 887 00a0 FFF7FEFF 		bl	Error_Handler
 888              	.LVL80:
 889              	.L40:
 890              		.align	2
 891              	.L39:
 892 00a4 00380240 		.word	1073887232
 893 00a8 00700040 		.word	1073770496
 894              		.cfi_endproc
 895              	.LFE135:
 897              		.section	.text.main,"ax",%progbits
 898              		.align	1
 899              		.global	main
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 904              	main:
 905              	.LFB134:
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 906              		.loc 1 78 1 view -0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 911              	.LCFI13:
 912              		.cfi_def_cfa_offset 24
 913              		.cfi_offset 3, -24
 914              		.cfi_offset 4, -20
 915              		.cfi_offset 5, -16
 916              		.cfi_offset 6, -12
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
  80:Core/Src/main.c ****   SystemClock_Config();
 919              		.loc 1 80 3 view .LVU218
 920 0002 FFF7FEFF 		bl	HAL_Init
 921              	.LVL81:
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 40


  81:Core/Src/main.c ****   MX_GPIO_Init();
 922              		.loc 1 81 3 view .LVU219
 923 0006 FFF7FEFF 		bl	SystemClock_Config
 924              	.LVL82:
  82:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 925              		.loc 1 82 3 view .LVU220
 926 000a FFF7FEFF 		bl	MX_GPIO_Init
 927              	.LVL83:
  85:Core/Src/main.c **** 
 928              		.loc 1 85 3 view .LVU221
 929 000e 0122     		movs	r2, #1
 930 0010 1146     		mov	r1, r2
 931 0012 1C48     		ldr	r0, .L46
 932 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 933              	.LVL84:
  88:Core/Src/main.c **** 	  int current_size = image_sizes[i];
 934              		.loc 1 88 3 view .LVU222
 935              	.LBB25:
  88:Core/Src/main.c **** 	  int current_size = image_sizes[i];
 936              		.loc 1 88 8 view .LVU223
  88:Core/Src/main.c **** 	  int current_size = image_sizes[i];
 937              		.loc 1 88 12 is_stmt 0 view .LVU224
 938 0018 0024     		movs	r4, #0
  88:Core/Src/main.c **** 	  int current_size = image_sizes[i];
 939              		.loc 1 88 3 view .LVU225
 940 001a 29E0     		b	.L42
 941              	.LVL85:
 942              	.L43:
 943              	.LBB26:
  89:Core/Src/main.c **** 
 944              		.loc 1 89 4 is_stmt 1 view .LVU226
  89:Core/Src/main.c **** 
 945              		.loc 1 89 8 is_stmt 0 view .LVU227
 946 001c 1A4B     		ldr	r3, .L46+4
 947 001e 53F82450 		ldr	r5, [r3, r4, lsl #2]
 948              	.LVL86:
  92:Core/Src/main.c **** 	  checksums_float[i] = calculate_mandelbrot_float(current_size, current_size, MAX_ITER);
 949              		.loc 1 92 4 is_stmt 1 view .LVU228
  92:Core/Src/main.c **** 	  checksums_float[i] = calculate_mandelbrot_float(current_size, current_size, MAX_ITER);
 950              		.loc 1 92 26 is_stmt 0 view .LVU229
 951 0022 FFF7FEFF 		bl	HAL_GetTick
 952              	.LVL87:
 953 0026 0646     		mov	r6, r0
 954              	.LVL88:
  93:Core/Src/main.c **** 	  times_float[i] = HAL_GetTick() - start_time;
 955              		.loc 1 93 4 is_stmt 1 view .LVU230
  93:Core/Src/main.c **** 	  times_float[i] = HAL_GetTick() - start_time;
 956              		.loc 1 93 25 is_stmt 0 view .LVU231
 957 0028 6422     		movs	r2, #100
 958 002a 2946     		mov	r1, r5
 959 002c 2846     		mov	r0, r5
 960              	.LVL89:
  93:Core/Src/main.c **** 	  times_float[i] = HAL_GetTick() - start_time;
 961              		.loc 1 93 25 view .LVU232
 962 002e FFF7FEFF 		bl	calculate_mandelbrot_float
 963              	.LVL90:
  93:Core/Src/main.c **** 	  times_float[i] = HAL_GetTick() - start_time;
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 41


 964              		.loc 1 93 23 discriminator 1 view .LVU233
 965 0032 E700     		lsls	r7, r4, #3
 966 0034 154B     		ldr	r3, .L46+8
 967 0036 03EBC403 		add	r3, r3, r4, lsl #3
 968 003a C3E90001 		strd	r0, [r3]
  94:Core/Src/main.c **** 
 969              		.loc 1 94 4 is_stmt 1 view .LVU234
  94:Core/Src/main.c **** 
 970              		.loc 1 94 21 is_stmt 0 view .LVU235
 971 003e FFF7FEFF 		bl	HAL_GetTick
 972              	.LVL91:
  94:Core/Src/main.c **** 
 973              		.loc 1 94 35 discriminator 1 view .LVU236
 974 0042 801B     		subs	r0, r0, r6
  94:Core/Src/main.c **** 
 975              		.loc 1 94 19 discriminator 1 view .LVU237
 976 0044 124B     		ldr	r3, .L46+12
 977 0046 43F82400 		str	r0, [r3, r4, lsl #2]
  97:Core/Src/main.c **** 	  checksums_double[i] = calculate_mandelbrot_double(current_size, current_size, MAX_ITER);
 978              		.loc 1 97 4 is_stmt 1 view .LVU238
  97:Core/Src/main.c **** 	  checksums_double[i] = calculate_mandelbrot_double(current_size, current_size, MAX_ITER);
 979              		.loc 1 97 17 is_stmt 0 view .LVU239
 980 004a FFF7FEFF 		bl	HAL_GetTick
 981              	.LVL92:
 982 004e 0646     		mov	r6, r0
 983              	.LVL93:
  98:Core/Src/main.c **** 	  times_double[i] = HAL_GetTick() - start_time;
 984              		.loc 1 98 4 is_stmt 1 view .LVU240
  98:Core/Src/main.c **** 	  times_double[i] = HAL_GetTick() - start_time;
 985              		.loc 1 98 26 is_stmt 0 view .LVU241
 986 0050 6422     		movs	r2, #100
 987 0052 2946     		mov	r1, r5
 988 0054 2846     		mov	r0, r5
 989              	.LVL94:
  98:Core/Src/main.c **** 	  times_double[i] = HAL_GetTick() - start_time;
 990              		.loc 1 98 26 view .LVU242
 991 0056 FFF7FEFF 		bl	calculate_mandelbrot_double
 992              	.LVL95:
  98:Core/Src/main.c **** 	  times_double[i] = HAL_GetTick() - start_time;
 993              		.loc 1 98 24 discriminator 1 view .LVU243
 994 005a 0E4B     		ldr	r3, .L46+16
 995 005c 3B44     		add	r3, r3, r7
 996 005e C3E90001 		strd	r0, [r3]
  99:Core/Src/main.c ****   }
 997              		.loc 1 99 4 is_stmt 1 view .LVU244
  99:Core/Src/main.c ****   }
 998              		.loc 1 99 22 is_stmt 0 view .LVU245
 999 0062 FFF7FEFF 		bl	HAL_GetTick
 1000              	.LVL96:
  99:Core/Src/main.c ****   }
 1001              		.loc 1 99 36 discriminator 1 view .LVU246
 1002 0066 801B     		subs	r0, r0, r6
  99:Core/Src/main.c ****   }
 1003              		.loc 1 99 20 discriminator 1 view .LVU247
 1004 0068 0B4B     		ldr	r3, .L46+20
 1005 006a 43F82400 		str	r0, [r3, r4, lsl #2]
 1006              	.LBE26:
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 42


  88:Core/Src/main.c **** 	  int current_size = image_sizes[i];
 1007              		.loc 1 88 27 is_stmt 1 discriminator 3 view .LVU248
 1008 006e 0134     		adds	r4, r4, #1
 1009              	.LVL97:
 1010              	.L42:
  88:Core/Src/main.c **** 	  int current_size = image_sizes[i];
 1011              		.loc 1 88 21 discriminator 1 view .LVU249
 1012 0070 042C     		cmp	r4, #4
 1013 0072 D3DD     		ble	.L43
 1014              	.LBE25:
 102:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET); // LED on: Finish
 1015              		.loc 1 102 3 view .LVU250
 102:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET); // LED on: Finish
 1016              		.loc 1 102 17 is_stmt 0 view .LVU251
 1017 0074 0122     		movs	r2, #1
 1018 0076 094B     		ldr	r3, .L46+24
 1019 0078 1A60     		str	r2, [r3]
 103:Core/Src/main.c ****   // --- END OF ADDED CODE ---
 1020              		.loc 1 103 3 is_stmt 1 view .LVU252
 1021 007a 0221     		movs	r1, #2
 1022 007c 0148     		ldr	r0, .L46
 1023 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1024              	.LVL98:
 1025              	.L44:
 108:Core/Src/main.c ****   {
 1026              		.loc 1 108 3 view .LVU253
 110:Core/Src/main.c **** }
 1027              		.loc 1 110 3 view .LVU254
 108:Core/Src/main.c ****   {
 1028              		.loc 1 108 9 view .LVU255
 1029 0082 FEE7     		b	.L44
 1030              	.L47:
 1031              		.align	2
 1032              	.L46:
 1033 0084 00040240 		.word	1073873920
 1034 0088 00000000 		.word	image_sizes
 1035 008c 00000000 		.word	checksums_float
 1036 0090 00000000 		.word	times_float
 1037 0094 00000000 		.word	checksums_double
 1038 0098 00000000 		.word	times_double
 1039 009c 00000000 		.word	test_complete
 1040              		.cfi_endproc
 1041              	.LFE134:
 1043              		.global	test_complete
 1044              		.section	.bss.test_complete,"aw",%nobits
 1045              		.align	2
 1048              	test_complete:
 1049 0000 00000000 		.space	4
 1050              		.global	checksums_double
 1051              		.section	.bss.checksums_double,"aw",%nobits
 1052              		.align	3
 1055              	checksums_double:
 1056 0000 00000000 		.space	40
 1056      00000000 
 1056      00000000 
 1056      00000000 
 1056      00000000 
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 43


 1057              		.global	times_double
 1058              		.section	.bss.times_double,"aw",%nobits
 1059              		.align	2
 1062              	times_double:
 1063 0000 00000000 		.space	20
 1063      00000000 
 1063      00000000 
 1063      00000000 
 1063      00000000 
 1064              		.global	checksums_float
 1065              		.section	.bss.checksums_float,"aw",%nobits
 1066              		.align	3
 1069              	checksums_float:
 1070 0000 00000000 		.space	40
 1070      00000000 
 1070      00000000 
 1070      00000000 
 1070      00000000 
 1071              		.global	times_float
 1072              		.section	.bss.times_float,"aw",%nobits
 1073              		.align	2
 1076              	times_float:
 1077 0000 00000000 		.space	20
 1077      00000000 
 1077      00000000 
 1077      00000000 
 1077      00000000 
 1078              		.global	image_sizes
 1079              		.section	.rodata.image_sizes,"a"
 1080              		.align	2
 1083              	image_sizes:
 1084 0000 80000000 		.word	128
 1085 0004 A0000000 		.word	160
 1086 0008 C0000000 		.word	192
 1087 000c E0000000 		.word	224
 1088 0010 00010000 		.word	256
 1089              		.text
 1090              	.Letext0:
 1091              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1092              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1093              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1094              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1095              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1096              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1097              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1098              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1099              		.file 11 "<built-in>"
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:131    .text.MX_GPIO_Init:00000074 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:143    .text.calculate_mandelbrot_float:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:149    .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:393    .text.calculate_mandelbrot_float:00000100 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:405    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:411    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:689    .text.calculate_mandelbrot_double:00000168 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:697    .text.Error_Handler:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:703    .text.Error_Handler:00000000 Error_Handler
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:735    .text.SystemClock_Config:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:741    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:892    .text.SystemClock_Config:000000a4 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:898    .text.main:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:904    .text.main:00000000 main
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1033   .text.main:00000084 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1083   .rodata.image_sizes:00000000 image_sizes
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1069   .bss.checksums_float:00000000 checksums_float
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1076   .bss.times_float:00000000 times_float
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1055   .bss.checksums_double:00000000 checksums_double
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1062   .bss.times_double:00000000 times_double
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1048   .bss.test_complete:00000000 test_complete
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1045   .bss.test_complete:00000000 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1052   .bss.checksums_double:00000000 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1059   .bss.times_double:00000000 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1066   .bss.checksums_float:00000000 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1073   .bss.times_float:00000000 $d
C:\Users\0geda\AppData\Local\Temp\ccZMVZvU.s:1080   .rodata.image_sizes:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_i2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_fsub
__aeabi_fadd
__aeabi_fcmple
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
