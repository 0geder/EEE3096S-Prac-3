ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.SystemClock_Config,"ax",%progbits
  19              		.align	1
  20              		.global	SystemClock_Config
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SystemClock_Config:
  26              	.LFB135:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   * @brief          : CODE FOR EEE3096S PRACTICAL 3, TASK 8 (POWER MEASUREMENT)
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * This code does not perform a measurement itself. It provides two distinct
  11:Core/Src/main.c ****   * states of operation (Active and Idle) during which an external power
  12:Core/Src/main.c ****   * measurement tool would be used.
  13:Core/Src/main.c ****   *
  14:Core/Src/main.c ****   ******************************************************************************
  15:Core/Src/main.c ****   */
  16:Core/Src/main.c **** /* USER CODE END Header */
  17:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  18:Core/Src/main.c **** #include "main.h"
  19:Core/Src/main.c **** 
  20:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  21:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  22:Core/Src/main.c **** #include <stdint.h>
  23:Core/Src/main.c **** /* USER CODE END Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  27:Core/Src/main.c **** /* USER CODE END PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PD */
  31:Core/Src/main.c **** #define MAX_ITER 100
  32:Core/Src/main.c **** #define IMAGE_SIZE 256
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PM */
  37:Core/Src/main.c **** /* USER CODE END PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE BEGIN PV */
  42:Core/Src/main.c **** // This volatile variable is just to ensure the compiler doesn't optimize away the loop
  43:Core/Src/main.c **** volatile uint64_t checksum_float;
  44:Core/Src/main.c **** /* USER CODE END PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  47:Core/Src/main.c **** void SystemClock_Config(void);
  48:Core/Src/main.c **** static void MX_GPIO_Init(void);
  49:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  51:Core/Src/main.c **** /* USER CODE END PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/main.c **** /* USER CODE END 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /**
  58:Core/Src/main.c ****   * @brief  The application entry point.
  59:Core/Src/main.c ****   * @retval int
  60:Core/Src/main.c ****   */
  61:Core/Src/main.c **** int main(void)
  62:Core/Src/main.c **** {
  63:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  64:Core/Src/main.c ****   HAL_Init();
  65:Core/Src/main.c ****   SystemClock_Config();
  66:Core/Src/main.c ****   MX_GPIO_Init();
  67:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   // --- STATE 1: ACTIVE COMPUTATION ---
  70:Core/Src/main.c ****   // An external power analyzer would measure the "Active Current" (I_active)
  71:Core/Src/main.c ****   // during this phase. The LED indicates this state is running.
  72:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   while (1) // Loop forever, constantly running the benchmark
  75:Core/Src/main.c ****   {
  76:Core/Src/main.c ****     // Run the most computationally intensive benchmark continuously
  77:Core/Src/main.c ****     checksum_float = calculate_mandelbrot_float(IMAGE_SIZE, IMAGE_SIZE, MAX_ITER);
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****     // NOTE: In a real measurement, you might remove the below section
  80:Core/Src/main.c ****     // and just let it loop on the calculation. For this practical, we'll
  81:Core/Src/main.c ****     // break out of this loop after one run to demonstrate the idle state.
  82:Core/Src/main.c ****     break;
  83:Core/Src/main.c ****   }
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   // --- STATE 2: IDLE ---
  89:Core/Src/main.c ****   // An external power analyzer would now measure the "Idle Current" (I_idle)
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 3


  90:Core/Src/main.c ****   // during this phase. A different LED indicates this state.
  91:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     // The CPU is now in a tight loop doing nothing. This represents the
  96:Core/Src/main.c ****     // baseline power consumption of the active MCU without a heavy workload.
  97:Core/Src/main.c ****     // A more advanced implementation might use a `__WFI()` (Wait For Interrupt)
  98:Core/Src/main.c ****     // instruction to enter a low-power sleep mode.
  99:Core/Src/main.c ****   }
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****   * @brief System Clock Configuration
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c **** void SystemClock_Config(void)
 108:Core/Src/main.c **** {
  27              		.loc 1 108 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 80
  30              		@ frame_needed = 0, uses_anonymous_args = 0
 109:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  31              		.loc 1 109 3 view .LVU1
 108:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  32              		.loc 1 108 1 is_stmt 0 view .LVU2
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
  42              		.loc 1 109 22 view .LVU3
  43 0004 1022     		movs	r2, #16
  44 0006 0021     		movs	r1, #0
  45 0008 09A8     		add	r0, sp, #36
  46 000a FFF7FEFF 		bl	memset
  47              	.LVL0:
 110:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  48              		.loc 1 110 3 is_stmt 1 view .LVU4
  49              		.loc 1 110 22 is_stmt 0 view .LVU5
  50 000e 1422     		movs	r2, #20
  51 0010 0021     		movs	r1, #0
  52 0012 02A8     		add	r0, sp, #8
  53 0014 FFF7FEFF 		bl	memset
  54              	.LVL1:
 111:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 111 3 is_stmt 1 view .LVU6
  56              	.LBB14:
  57              		.loc 1 111 3 view .LVU7
  58 0018 204B     		ldr	r3, .L6
  59 001a 0021     		movs	r1, #0
  60 001c 0091     		str	r1, [sp]
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 4


  61              		.loc 1 111 3 view .LVU8
  62 001e 1A6C     		ldr	r2, [r3, #64]
  63 0020 42F08052 		orr	r2, r2, #268435456
  64 0024 1A64     		str	r2, [r3, #64]
  65              		.loc 1 111 3 view .LVU9
  66 0026 1B6C     		ldr	r3, [r3, #64]
  67              	.LBE14:
  68              	.LBB15:
 112:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  69              		.loc 1 112 3 is_stmt 0 view .LVU10
  70 0028 1D4A     		ldr	r2, .L6+4
  71              	.LBE15:
  72              	.LBB16:
 111:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  73              		.loc 1 111 3 view .LVU11
  74 002a 03F08053 		and	r3, r3, #268435456
  75 002e 0093     		str	r3, [sp]
 111:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  76              		.loc 1 111 3 is_stmt 1 view .LVU12
  77 0030 009B     		ldr	r3, [sp]
  78              	.LBE16:
 111:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  79              		.loc 1 111 3 view .LVU13
  80              		.loc 1 112 3 view .LVU14
  81              	.LBB17:
  82              		.loc 1 112 3 view .LVU15
  83 0032 0191     		str	r1, [sp, #4]
  84              		.loc 1 112 3 view .LVU16
  85 0034 1368     		ldr	r3, [r2]
  86 0036 23F44043 		bic	r3, r3, #49152
  87 003a 43F48043 		orr	r3, r3, #16384
  88 003e 1360     		str	r3, [r2]
  89              		.loc 1 112 3 view .LVU17
  90 0040 1368     		ldr	r3, [r2]
  91 0042 03F44043 		and	r3, r3, #49152
  92 0046 0193     		str	r3, [sp, #4]
  93              		.loc 1 112 3 view .LVU18
  94 0048 019B     		ldr	r3, [sp, #4]
  95              	.LBE17:
  96              		.loc 1 112 3 view .LVU19
 113:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  97              		.loc 1 113 3 view .LVU20
 114:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  98              		.loc 1 114 30 is_stmt 0 view .LVU21
  99 004a 0121     		movs	r1, #1
 100 004c 4FF48033 		mov	r3, #65536
 115:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 116:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 101              		.loc 1 116 35 view .LVU22
 102 0050 0224     		movs	r4, #2
 114:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 103              		.loc 1 114 30 view .LVU23
 104 0052 CDE90713 		strd	r1, r3, [sp, #28]
 115:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 105              		.loc 1 115 3 is_stmt 1 view .LVU24
 106              		.loc 1 116 35 is_stmt 0 view .LVU25
 107 0056 4FF48003 		mov	r3, #4194304
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 5


 108 005a CDE90D43 		strd	r4, r3, [sp, #52]
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 109              		.loc 1 117 3 is_stmt 1 view .LVU26
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 110              		.loc 1 118 30 is_stmt 0 view .LVU27
 111 005e 0F25     		movs	r5, #15
 112 0060 9023     		movs	r3, #144
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 122:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 113              		.loc 1 122 7 view .LVU28
 114 0062 07A8     		add	r0, sp, #28
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 115              		.loc 1 118 30 view .LVU29
 116 0064 CDE90F53 		strd	r5, r3, [sp, #60]
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 117              		.loc 1 119 3 is_stmt 1 view .LVU30
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 118              		.loc 1 120 30 is_stmt 0 view .LVU31
 119 0068 CDE91144 		strd	r4, r4, [sp, #68]
 121:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 120              		.loc 1 121 3 is_stmt 1 view .LVU32
 121:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 121              		.loc 1 121 30 is_stmt 0 view .LVU33
 122 006c 1394     		str	r4, [sp, #76]
 123              		.loc 1 122 3 is_stmt 1 view .LVU34
 124              		.loc 1 122 7 is_stmt 0 view .LVU35
 125 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 126              	.LVL2:
 127              		.loc 1 122 6 discriminator 1 view .LVU36
 128 0072 08B1     		cbz	r0, .L2
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     Error_Handler();
 129              		.loc 1 124 5 is_stmt 1 view .LVU37
 130              	.LBB18:
 131              	.LBI18:
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 127:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 128:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 129:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 131:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 132:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     Error_Handler();
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c **** }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief GPIO Initialization Function
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** static void MX_GPIO_Init(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 144:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 6


 145:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 146:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 147:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 148:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 149:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 150:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 151:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 152:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 153:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 155:Core/Src/main.c **** }
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 158:Core/Src/main.c **** // Float version for FPU testing
 159:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations) {
 160:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 161:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 162:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 163:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 164:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 165:Core/Src/main.c ****             float z_real = 0.0f;
 166:Core/Src/main.c ****             float z_imag = 0.0f;
 167:Core/Src/main.c ****             int iteration = 0;
 168:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0f) {
 169:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 170:Core/Src/main.c ****                 z_imag = 2.0f * z_real * z_imag + c_imag;
 171:Core/Src/main.c ****                 z_real = z_real_new;
 172:Core/Src/main.c ****                 iteration++;
 173:Core/Src/main.c ****             }
 174:Core/Src/main.c ****             mandelbrot_sum += iteration;
 175:Core/Src/main.c ****         }
 176:Core/Src/main.c ****     }
 177:Core/Src/main.c ****     return mandelbrot_sum;
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** /* USER CODE END 4 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** void Error_Handler(void)
 132              		.loc 1 184 6 view .LVU38
 185:Core/Src/main.c **** {
 186:Core/Src/main.c ****   __disable_irq();
 133              		.loc 1 186 3 view .LVU39
 134              	.LBB19:
 135              	.LBI19:
 136              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 7


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 8


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 9


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 10


 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 11


 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 12


 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 13


 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 14


 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 15


 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 16


 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 17


 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 18


 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 19


 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 20


 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 21


 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 22


 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 23


 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 137              		.loc 2 960 27 view .LVU40
 138              	.LBB20:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 139              		.loc 2 962 3 view .LVU41
 140              		.syntax unified
 141              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 142 0074 72B6     		cpsid i
 143              	@ 0 "" 2
 144              		.thumb
 145              		.syntax unified
 146              	.L3:
 147              	.LBE20:
 148              	.LBE19:
 187:Core/Src/main.c ****   while (1)
 149              		.loc 1 187 3 view .LVU42
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****   }
 150              		.loc 1 189 3 view .LVU43
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 24


 187:Core/Src/main.c ****   while (1)
 151              		.loc 1 187 9 view .LVU44
 152 0076 FEE7     		b	.L3
 153              	.L2:
 154              	.LBE18:
 126:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 155              		.loc 1 126 3 view .LVU45
 129:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 156              		.loc 1 129 35 is_stmt 0 view .LVU46
 157 0078 0490     		str	r0, [sp, #16]
 131:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 158              		.loc 1 131 36 view .LVU47
 159 007a 4FF4A052 		mov	r2, #5120
 160 007e 4FF48053 		mov	r3, #4096
 132:Core/Src/main.c ****   {
 161              		.loc 1 132 7 view .LVU48
 162 0082 0321     		movs	r1, #3
 163 0084 02A8     		add	r0, sp, #8
 128:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164              		.loc 1 128 34 view .LVU49
 165 0086 CDE90254 		strd	r5, r4, [sp, #8]
 129:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 166              		.loc 1 129 3 is_stmt 1 view .LVU50
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 167              		.loc 1 130 3 view .LVU51
 131:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 168              		.loc 1 131 36 is_stmt 0 view .LVU52
 169 008a CDE90523 		strd	r2, r3, [sp, #20]
 132:Core/Src/main.c ****   {
 170              		.loc 1 132 3 is_stmt 1 view .LVU53
 132:Core/Src/main.c ****   {
 171              		.loc 1 132 7 is_stmt 0 view .LVU54
 172 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 173              	.LVL3:
 132:Core/Src/main.c ****   {
 174              		.loc 1 132 6 discriminator 1 view .LVU55
 175 0092 08B1     		cbz	r0, .L1
 134:Core/Src/main.c ****   }
 176              		.loc 1 134 5 is_stmt 1 view .LVU56
 177              	.LBB21:
 178              	.LBI21:
 184:Core/Src/main.c **** {
 179              		.loc 1 184 6 view .LVU57
 186:Core/Src/main.c ****   while (1)
 180              		.loc 1 186 3 view .LVU58
 181              	.LBB22:
 182              	.LBI22:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183              		.loc 2 960 27 view .LVU59
 184              	.LBB23:
 185              		.loc 2 962 3 view .LVU60
 186              		.syntax unified
 187              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 188 0094 72B6     		cpsid i
 189              	@ 0 "" 2
 190              		.thumb
 191              		.syntax unified
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 25


 192              	.L5:
 193              	.LBE23:
 194              	.LBE22:
 187:Core/Src/main.c ****   {
 195              		.loc 1 187 3 view .LVU61
 196              		.loc 1 189 3 view .LVU62
 187:Core/Src/main.c ****   {
 197              		.loc 1 187 9 view .LVU63
 198 0096 FEE7     		b	.L5
 199              	.L1:
 200              	.LBE21:
 136:Core/Src/main.c **** 
 201              		.loc 1 136 1 is_stmt 0 view .LVU64
 202 0098 15B0     		add	sp, sp, #84
 203              	.LCFI2:
 204              		.cfi_def_cfa_offset 12
 205              		@ sp needed
 206 009a 30BD     		pop	{r4, r5, pc}
 207              	.L7:
 208              		.align	2
 209              	.L6:
 210 009c 00380240 		.word	1073887232
 211 00a0 00700040 		.word	1073770496
 212              		.cfi_endproc
 213              	.LFE135:
 215              		.global	__aeabi_i2f
 216              		.global	__aeabi_fdiv
 217              		.global	__aeabi_fmul
 218              		.global	__aeabi_fsub
 219              		.global	__aeabi_fadd
 220              		.global	__aeabi_fcmple
 221              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 222              		.align	1
 223              		.global	calculate_mandelbrot_float
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	calculate_mandelbrot_float:
 229              	.LVL4:
 230              	.LFB137:
 159:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 231              		.loc 1 159 80 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 24
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 160:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 235              		.loc 1 160 5 view .LVU66
 161:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 236              		.loc 1 161 5 view .LVU67
 237              	.LBB24:
 161:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 238              		.loc 1 161 10 view .LVU68
 161:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 239              		.loc 1 161 10 is_stmt 0 view .LVU69
 240              	.LBE24:
 159:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 241              		.loc 1 159 80 view .LVU70
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 26


 242 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 243              	.LCFI3:
 244              		.cfi_def_cfa_offset 36
 245              		.cfi_offset 4, -36
 246              		.cfi_offset 5, -32
 247              		.cfi_offset 6, -28
 248              		.cfi_offset 7, -24
 249              		.cfi_offset 8, -20
 250              		.cfi_offset 9, -16
 251              		.cfi_offset 10, -12
 252              		.cfi_offset 11, -8
 253              		.cfi_offset 14, -4
 254 0004 87B0     		sub	sp, sp, #28
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 64
 159:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 257              		.loc 1 159 80 view .LVU71
 258 0006 CDE90001 		strd	r0, r1, [sp]
 259              	.LBB30:
 161:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 260              		.loc 1 161 14 view .LVU72
 261 000a 0026     		movs	r6, #0
 262              	.LBE30:
 159:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 263              		.loc 1 159 80 view .LVU73
 264 000c 0492     		str	r2, [sp, #16]
 160:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 265              		.loc 1 160 14 view .LVU74
 266 000e 3546     		mov	r5, r6
 267 0010 B246     		mov	r10, r6
 268              	.LVL5:
 269              	.L9:
 270              	.LBB31:
 161:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 271              		.loc 1 161 23 is_stmt 1 discriminator 1 view .LVU75
 272 0012 019B     		ldr	r3, [sp, #4]
 273 0014 9E42     		cmp	r6, r3
 274 0016 64DB     		blt	.L16
 275              	.LBE31:
 177:Core/Src/main.c **** }
 276              		.loc 1 177 5 view .LVU76
 178:Core/Src/main.c **** /* USER CODE END 4 */
 277              		.loc 1 178 1 is_stmt 0 view .LVU77
 278 0018 2846     		mov	r0, r5
 279 001a 5146     		mov	r1, r10
 280 001c 07B0     		add	sp, sp, #28
 281              	.LCFI5:
 282              		.cfi_remember_state
 283              		.cfi_def_cfa_offset 36
 284              	.LVL6:
 178:Core/Src/main.c **** /* USER CODE END 4 */
 285              		.loc 1 178 1 view .LVU78
 286              		@ sp needed
 287 001e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 288              	.LVL7:
 289              	.L15:
 290              	.LCFI6:
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 27


 291              		.cfi_restore_state
 292              	.LBB32:
 293              	.LBB25:
 294              	.LBB26:
 163:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 295              		.loc 1 163 13 is_stmt 1 view .LVU79
 163:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 296              		.loc 1 163 29 is_stmt 0 view .LVU80
 297 0022 4046     		mov	r0, r8
 298 0024 FFF7FEFF 		bl	__aeabi_i2f
 299              	.LVL8:
 300 0028 0446     		mov	r4, r0
 163:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 301              		.loc 1 163 38 view .LVU81
 302 002a 0098     		ldr	r0, [sp]
 303 002c FFF7FEFF 		bl	__aeabi_i2f
 304              	.LVL9:
 305 0030 0146     		mov	r1, r0
 306 0032 2046     		mov	r0, r4
 307 0034 FFF7FEFF 		bl	__aeabi_fdiv
 308              	.LVL10:
 163:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 309              		.loc 1 163 47 view .LVU82
 310 0038 2B49     		ldr	r1, .L17
 311 003a FFF7FEFF 		bl	__aeabi_fmul
 312              	.LVL11:
 163:Core/Src/main.c ****             float c_imag = ((float)y / height) * 2.0f - 1.0f;
 313              		.loc 1 163 19 view .LVU83
 314 003e 2B49     		ldr	r1, .L17+4
 315 0040 FFF7FEFF 		bl	__aeabi_fsub
 316              	.LVL12:
 317 0044 0290     		str	r0, [sp, #8]	@ float
 318              	.LVL13:
 164:Core/Src/main.c ****             float z_real = 0.0f;
 319              		.loc 1 164 13 is_stmt 1 view .LVU84
 164:Core/Src/main.c ****             float z_real = 0.0f;
 320              		.loc 1 164 29 is_stmt 0 view .LVU85
 321 0046 3046     		mov	r0, r6
 322              	.LVL14:
 164:Core/Src/main.c ****             float z_real = 0.0f;
 323              		.loc 1 164 29 view .LVU86
 324 0048 FFF7FEFF 		bl	__aeabi_i2f
 325              	.LVL15:
 326 004c 0446     		mov	r4, r0
 164:Core/Src/main.c ****             float z_real = 0.0f;
 327              		.loc 1 164 38 view .LVU87
 328 004e 0198     		ldr	r0, [sp, #4]
 329 0050 FFF7FEFF 		bl	__aeabi_i2f
 330              	.LVL16:
 331 0054 0146     		mov	r1, r0
 332 0056 2046     		mov	r0, r4
 333 0058 FFF7FEFF 		bl	__aeabi_fdiv
 334              	.LVL17:
 335 005c 0146     		mov	r1, r0
 164:Core/Src/main.c ****             float z_real = 0.0f;
 336              		.loc 1 164 48 view .LVU88
 337 005e FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 28


 338              	.LVL18:
 164:Core/Src/main.c ****             float z_real = 0.0f;
 339              		.loc 1 164 19 view .LVU89
 340 0062 4FF07E51 		mov	r1, #1065353216
 341 0066 FFF7FEFF 		bl	__aeabi_fsub
 342              	.LVL19:
 166:Core/Src/main.c ****             int iteration = 0;
 343              		.loc 1 166 19 view .LVU90
 344 006a 0027     		movs	r7, #0
 164:Core/Src/main.c ****             float z_real = 0.0f;
 345              		.loc 1 164 19 view .LVU91
 346 006c 0390     		str	r0, [sp, #12]	@ float
 347              	.LVL20:
 165:Core/Src/main.c ****             float z_imag = 0.0f;
 348              		.loc 1 165 13 is_stmt 1 view .LVU92
 166:Core/Src/main.c ****             int iteration = 0;
 349              		.loc 1 166 13 view .LVU93
 167:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0f) {
 350              		.loc 1 167 13 view .LVU94
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 351              		.loc 1 168 13 view .LVU95
 167:Core/Src/main.c ****             while (iteration < max_iterations && (z_real * z_real + z_imag * z_imag) <= 4.0f) {
 352              		.loc 1 167 17 is_stmt 0 view .LVU96
 353 006e 0024     		movs	r4, #0
 165:Core/Src/main.c ****             float z_imag = 0.0f;
 354              		.loc 1 165 19 view .LVU97
 355 0070 BB46     		mov	fp, r7
 356              	.LVL21:
 357              	.L10:
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 358              		.loc 1 168 47 is_stmt 1 view .LVU98
 359 0072 049B     		ldr	r3, [sp, #16]
 360 0074 9C42     		cmp	r4, r3
 361 0076 09DB     		blt	.L11
 362              	.L14:
 174:Core/Src/main.c ****         }
 363              		.loc 1 174 13 view .LVU99
 174:Core/Src/main.c ****         }
 364              		.loc 1 174 28 is_stmt 0 view .LVU100
 365 0078 6519     		adds	r5, r4, r5
 366              	.LVL22:
 174:Core/Src/main.c ****         }
 367              		.loc 1 174 28 view .LVU101
 368 007a 4AEBE47A 		adc	r10, r10, r4, asr #31
 369              	.LVL23:
 174:Core/Src/main.c ****         }
 370              		.loc 1 174 28 view .LVU102
 371              	.LBE26:
 162:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 372              		.loc 1 162 37 is_stmt 1 discriminator 2 view .LVU103
 373 007e 08F10108 		add	r8, r8, #1
 374              	.LVL24:
 375              	.L12:
 162:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 376              		.loc 1 162 27 discriminator 1 view .LVU104
 377 0082 009B     		ldr	r3, [sp]
 378 0084 9845     		cmp	r8, r3
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 29


 379 0086 CCDB     		blt	.L15
 380              	.LBE25:
 161:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 381              		.loc 1 161 34 discriminator 2 view .LVU105
 382 0088 0136     		adds	r6, r6, #1
 383              	.LVL25:
 161:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 384              		.loc 1 161 34 is_stmt 0 discriminator 2 view .LVU106
 385 008a C2E7     		b	.L9
 386              	.LVL26:
 387              	.L11:
 388              	.LBB29:
 389              	.LBB28:
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 390              		.loc 1 168 58 discriminator 1 view .LVU107
 391 008c 5946     		mov	r1, fp
 392 008e 5846     		mov	r0, fp
 393 0090 FFF7FEFF 		bl	__aeabi_fmul
 394              	.LVL27:
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 395              		.loc 1 168 76 discriminator 1 view .LVU108
 396 0094 3946     		mov	r1, r7
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 397              		.loc 1 168 58 discriminator 1 view .LVU109
 398 0096 8146     		mov	r9, r0
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 399              		.loc 1 168 76 discriminator 1 view .LVU110
 400 0098 3846     		mov	r0, r7
 401 009a FFF7FEFF 		bl	__aeabi_fmul
 402              	.LVL28:
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 403              		.loc 1 168 67 discriminator 1 view .LVU111
 404 009e 0146     		mov	r1, r0
 405 00a0 0590     		str	r0, [sp, #20]
 406 00a2 4846     		mov	r0, r9
 407 00a4 FFF7FEFF 		bl	__aeabi_fadd
 408              	.LVL29:
 168:Core/Src/main.c ****                 float z_real_new = z_real * z_real - z_imag * z_imag + c_real;
 409              		.loc 1 168 47 discriminator 1 view .LVU112
 410 00a8 4FF08141 		mov	r1, #1082130432
 411 00ac FFF7FEFF 		bl	__aeabi_fcmple
 412              	.LVL30:
 413 00b0 059B     		ldr	r3, [sp, #20]
 414 00b2 0028     		cmp	r0, #0
 415 00b4 E0D0     		beq	.L14
 416              	.LBB27:
 169:Core/Src/main.c ****                 z_imag = 2.0f * z_real * z_imag + c_imag;
 417              		.loc 1 169 17 is_stmt 1 view .LVU113
 169:Core/Src/main.c ****                 z_imag = 2.0f * z_real * z_imag + c_imag;
 418              		.loc 1 169 52 is_stmt 0 view .LVU114
 419 00b6 1946     		mov	r1, r3
 420 00b8 4846     		mov	r0, r9
 421 00ba FFF7FEFF 		bl	__aeabi_fsub
 422              	.LVL31:
 169:Core/Src/main.c ****                 z_imag = 2.0f * z_real * z_imag + c_imag;
 423              		.loc 1 169 23 view .LVU115
 424 00be 0299     		ldr	r1, [sp, #8]	@ float
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 30


 425 00c0 FFF7FEFF 		bl	__aeabi_fadd
 426              	.LVL32:
 170:Core/Src/main.c ****                 z_real = z_real_new;
 427              		.loc 1 170 31 view .LVU116
 428 00c4 5946     		mov	r1, fp
 169:Core/Src/main.c ****                 z_imag = 2.0f * z_real * z_imag + c_imag;
 429              		.loc 1 169 23 view .LVU117
 430 00c6 8146     		mov	r9, r0
 431              	.LVL33:
 170:Core/Src/main.c ****                 z_real = z_real_new;
 432              		.loc 1 170 17 is_stmt 1 view .LVU118
 170:Core/Src/main.c ****                 z_real = z_real_new;
 433              		.loc 1 170 31 is_stmt 0 view .LVU119
 434 00c8 5846     		mov	r0, fp
 435              	.LVL34:
 170:Core/Src/main.c ****                 z_real = z_real_new;
 436              		.loc 1 170 31 view .LVU120
 437 00ca FFF7FEFF 		bl	__aeabi_fadd
 438              	.LVL35:
 170:Core/Src/main.c ****                 z_real = z_real_new;
 439              		.loc 1 170 40 view .LVU121
 440 00ce 3946     		mov	r1, r7
 441 00d0 FFF7FEFF 		bl	__aeabi_fmul
 442              	.LVL36:
 170:Core/Src/main.c ****                 z_real = z_real_new;
 443              		.loc 1 170 24 view .LVU122
 444 00d4 0399     		ldr	r1, [sp, #12]	@ float
 445 00d6 FFF7FEFF 		bl	__aeabi_fadd
 446              	.LVL37:
 172:Core/Src/main.c ****             }
 447              		.loc 1 172 26 view .LVU123
 448 00da 0134     		adds	r4, r4, #1
 449              	.LVL38:
 170:Core/Src/main.c ****                 z_real = z_real_new;
 450              		.loc 1 170 24 view .LVU124
 451 00dc 0746     		mov	r7, r0
 452              	.LVL39:
 171:Core/Src/main.c ****                 iteration++;
 453              		.loc 1 171 17 is_stmt 1 view .LVU125
 172:Core/Src/main.c ****             }
 454              		.loc 1 172 17 view .LVU126
 171:Core/Src/main.c ****                 iteration++;
 455              		.loc 1 171 24 is_stmt 0 view .LVU127
 456 00de CB46     		mov	fp, r9
 457 00e0 C7E7     		b	.L10
 458              	.LVL40:
 459              	.L16:
 171:Core/Src/main.c ****                 iteration++;
 460              		.loc 1 171 24 view .LVU128
 461              	.LBE27:
 462              	.LBE28:
 162:Core/Src/main.c ****             float c_real = ((float)x / width) * 3.5f - 2.5f;
 463              		.loc 1 162 18 view .LVU129
 464 00e2 4FF00008 		mov	r8, #0
 465 00e6 CCE7     		b	.L12
 466              	.L18:
 467              		.align	2
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 31


 468              	.L17:
 469 00e8 00006040 		.word	1080033280
 470 00ec 00002040 		.word	1075838976
 471              	.LBE29:
 472              	.LBE32:
 473              		.cfi_endproc
 474              	.LFE137:
 476              		.section	.text.startup.main,"ax",%progbits
 477              		.align	1
 478              		.global	main
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	main:
 484              	.LFB134:
  62:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 485              		.loc 1 62 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ Volatile: function does not return.
 488              		@ args = 0, pretend = 0, frame = 32
 489              		@ frame_needed = 0, uses_anonymous_args = 0
  64:Core/Src/main.c ****   SystemClock_Config();
 490              		.loc 1 64 3 view .LVU131
  62:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 491              		.loc 1 62 1 is_stmt 0 view .LVU132
 492 0000 00B5     		push	{lr}
 493              	.LCFI7:
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 14, -4
 496 0002 89B0     		sub	sp, sp, #36
 497              	.LCFI8:
 498              		.cfi_def_cfa_offset 40
  64:Core/Src/main.c ****   SystemClock_Config();
 499              		.loc 1 64 3 view .LVU133
 500 0004 FFF7FEFF 		bl	HAL_Init
 501              	.LVL41:
  65:Core/Src/main.c ****   MX_GPIO_Init();
 502              		.loc 1 65 3 is_stmt 1 view .LVU134
 503 0008 FFF7FEFF 		bl	SystemClock_Config
 504              	.LVL42:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 505              		.loc 1 66 3 view .LVU135
 506              	.LBB38:
 507              	.LBI38:
 141:Core/Src/main.c **** {
 508              		.loc 1 141 13 view .LVU136
 509              	.LBB39:
 143:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 510              		.loc 1 143 3 view .LVU137
 143:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 511              		.loc 1 143 20 is_stmt 0 view .LVU138
 512 000c 1422     		movs	r2, #20
 513 000e 0021     		movs	r1, #0
 514 0010 03A8     		add	r0, sp, #12
 515 0012 FFF7FEFF 		bl	memset
 516              	.LVL43:
 144:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 32


 517              		.loc 1 144 3 is_stmt 1 view .LVU139
 518              	.LBB40:
 144:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 519              		.loc 1 144 3 view .LVU140
 520 0016 0024     		movs	r4, #0
 521 0018 234B     		ldr	r3, .L21
 522 001a 0094     		str	r4, [sp]
 144:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 523              		.loc 1 144 3 view .LVU141
 524 001c 1A6B     		ldr	r2, [r3, #48]
 525              	.LBE40:
 147:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 526              		.loc 1 147 3 is_stmt 0 view .LVU142
 527 001e 2348     		ldr	r0, .L21+4
 528              	.LBB41:
 144:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 529              		.loc 1 144 3 view .LVU143
 530 0020 42F00402 		orr	r2, r2, #4
 531 0024 1A63     		str	r2, [r3, #48]
 144:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 532              		.loc 1 144 3 is_stmt 1 view .LVU144
 533 0026 1A6B     		ldr	r2, [r3, #48]
 534 0028 02F00402 		and	r2, r2, #4
 535 002c 0092     		str	r2, [sp]
 144:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 536              		.loc 1 144 3 view .LVU145
 537 002e 009A     		ldr	r2, [sp]
 538              	.LBE41:
 144:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 539              		.loc 1 144 3 view .LVU146
 145:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 540              		.loc 1 145 3 view .LVU147
 541              	.LBB42:
 145:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 542              		.loc 1 145 3 view .LVU148
 543 0030 0194     		str	r4, [sp, #4]
 145:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 544              		.loc 1 145 3 view .LVU149
 545 0032 1A6B     		ldr	r2, [r3, #48]
 546 0034 42F08002 		orr	r2, r2, #128
 547 0038 1A63     		str	r2, [r3, #48]
 145:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 548              		.loc 1 145 3 view .LVU150
 549 003a 1A6B     		ldr	r2, [r3, #48]
 550 003c 02F08002 		and	r2, r2, #128
 551 0040 0192     		str	r2, [sp, #4]
 145:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 552              		.loc 1 145 3 view .LVU151
 553 0042 019A     		ldr	r2, [sp, #4]
 554              	.LBE42:
 145:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 555              		.loc 1 145 3 view .LVU152
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 556              		.loc 1 146 3 view .LVU153
 557              	.LBB43:
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 558              		.loc 1 146 3 view .LVU154
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 33


 559 0044 0294     		str	r4, [sp, #8]
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 560              		.loc 1 146 3 view .LVU155
 561 0046 1A6B     		ldr	r2, [r3, #48]
 562 0048 42F00202 		orr	r2, r2, #2
 563 004c 1A63     		str	r2, [r3, #48]
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 564              		.loc 1 146 3 view .LVU156
 565 004e 1B6B     		ldr	r3, [r3, #48]
 566 0050 03F00203 		and	r3, r3, #2
 567              	.LBE43:
 147:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 568              		.loc 1 147 3 is_stmt 0 view .LVU157
 569 0054 2246     		mov	r2, r4
 570              	.LBB44:
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 571              		.loc 1 146 3 view .LVU158
 572 0056 0293     		str	r3, [sp, #8]
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 573              		.loc 1 146 3 is_stmt 1 view .LVU159
 574              	.LBE44:
 147:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 575              		.loc 1 147 3 is_stmt 0 view .LVU160
 576 0058 FF21     		movs	r1, #255
 151:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 577              		.loc 1 151 24 view .LVU161
 578 005a 0125     		movs	r5, #1
 579              	.LBB45:
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 580              		.loc 1 146 3 view .LVU162
 581 005c 029B     		ldr	r3, [sp, #8]
 582              	.LBE45:
 146:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 583              		.loc 1 146 3 is_stmt 1 view .LVU163
 147:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 584              		.loc 1 147 3 view .LVU164
 585 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 586              	.LVL44:
 149:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 587              		.loc 1 149 3 view .LVU165
 151:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 588              		.loc 1 151 24 is_stmt 0 view .LVU166
 589 0062 FF23     		movs	r3, #255
 154:Core/Src/main.c **** }
 590              		.loc 1 154 3 view .LVU167
 591 0064 1148     		ldr	r0, .L21+4
 592 0066 03A9     		add	r1, sp, #12
 151:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 593              		.loc 1 151 24 view .LVU168
 594 0068 CDE90335 		strd	r3, r5, [sp, #12]
 152:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 595              		.loc 1 152 3 is_stmt 1 view .LVU169
 153:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 596              		.loc 1 153 25 is_stmt 0 view .LVU170
 597 006c CDE90544 		strd	r4, r4, [sp, #20]
 154:Core/Src/main.c **** }
 598              		.loc 1 154 3 is_stmt 1 view .LVU171
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 34


 599 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 600              	.LVL45:
 601              	.LBE39:
 602              	.LBE38:
  72:Core/Src/main.c **** 
 603              		.loc 1 72 3 view .LVU172
 604 0074 0D48     		ldr	r0, .L21+4
 605 0076 2A46     		mov	r2, r5
 606 0078 2946     		mov	r1, r5
 607 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL46:
  74:Core/Src/main.c ****   {
 609              		.loc 1 74 3 view .LVU173
  77:Core/Src/main.c **** 
 610              		.loc 1 77 5 view .LVU174
  77:Core/Src/main.c **** 
 611              		.loc 1 77 22 is_stmt 0 view .LVU175
 612 007e 4FF48071 		mov	r1, #256
 613 0082 6422     		movs	r2, #100
 614 0084 0846     		mov	r0, r1
 615 0086 FFF7FEFF 		bl	calculate_mandelbrot_float
 616              	.LVL47:
  77:Core/Src/main.c **** 
 617              		.loc 1 77 20 discriminator 1 view .LVU176
 618 008a 094B     		ldr	r3, .L21+8
  85:Core/Src/main.c **** 
 619              		.loc 1 85 3 view .LVU177
 620 008c 2246     		mov	r2, r4
  77:Core/Src/main.c **** 
 621              		.loc 1 77 20 discriminator 1 view .LVU178
 622 008e C3E90001 		strd	r0, [r3]
  82:Core/Src/main.c ****   }
 623              		.loc 1 82 5 is_stmt 1 view .LVU179
  85:Core/Src/main.c **** 
 624              		.loc 1 85 3 view .LVU180
 625 0092 0648     		ldr	r0, .L21+4
 626 0094 2946     		mov	r1, r5
 627 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 628              	.LVL48:
  91:Core/Src/main.c **** 
 629              		.loc 1 91 3 view .LVU181
 630 009a 0448     		ldr	r0, .L21+4
 631 009c 2A46     		mov	r2, r5
 632 009e 0221     		movs	r1, #2
 633 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 634              	.LVL49:
 635              	.L20:
  93:Core/Src/main.c ****   {
 636              		.loc 1 93 3 view .LVU182
  99:Core/Src/main.c **** 
 637              		.loc 1 99 3 view .LVU183
  93:Core/Src/main.c ****   {
 638              		.loc 1 93 9 view .LVU184
 639 00a4 FEE7     		b	.L20
 640              	.L22:
 641 00a6 00BF     		.align	2
 642              	.L21:
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 35


 643 00a8 00380240 		.word	1073887232
 644 00ac 00040240 		.word	1073873920
 645 00b0 00000000 		.word	checksum_float
 646              		.cfi_endproc
 647              	.LFE134:
 649              		.section	.text.Error_Handler,"ax",%progbits
 650              		.align	1
 651              		.global	Error_Handler
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 656              	Error_Handler:
 657              	.LFB138:
 185:Core/Src/main.c ****   __disable_irq();
 658              		.loc 1 185 1 view -0
 659              		.cfi_startproc
 660              		@ Volatile: function does not return.
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 186:Core/Src/main.c ****   while (1)
 664              		.loc 1 186 3 view .LVU186
 665              	.LBB46:
 666              	.LBI46:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 667              		.loc 2 960 27 view .LVU187
 668              	.LBB47:
 669              		.loc 2 962 3 view .LVU188
 670              		.syntax unified
 671              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 672 0000 72B6     		cpsid i
 673              	@ 0 "" 2
 674              		.thumb
 675              		.syntax unified
 676              	.L24:
 677              	.LBE47:
 678              	.LBE46:
 187:Core/Src/main.c ****   {
 679              		.loc 1 187 3 view .LVU189
 680              		.loc 1 189 3 view .LVU190
 187:Core/Src/main.c ****   {
 681              		.loc 1 187 9 view .LVU191
 682 0002 FEE7     		b	.L24
 683              		.cfi_endproc
 684              	.LFE138:
 686              		.global	checksum_float
 687              		.section	.bss.checksum_float,"aw",%nobits
 688              		.align	3
 691              	checksum_float:
 692 0000 00000000 		.space	8
 692      00000000 
 693              		.text
 694              	.Letext0:
 695              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 696              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 697              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 698              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 36


 699              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 700              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 701              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 702              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 703              		.file 11 "<built-in>"
ARM GAS  C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:19     .text.SystemClock_Config:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:210    .text.SystemClock_Config:0000009c $d
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:222    .text.calculate_mandelbrot_float:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:228    .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:469    .text.calculate_mandelbrot_float:000000e8 $d
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:477    .text.startup.main:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:483    .text.startup.main:00000000 main
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:643    .text.startup.main:000000a8 $d
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:691    .bss.checksum_float:00000000 checksum_float
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:650    .text.Error_Handler:00000000 $t
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:656    .text.Error_Handler:00000000 Error_Handler
C:\Users\0geda\AppData\Local\Temp\ccgC3djb.s:688    .bss.checksum_float:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_fsub
__aeabi_fadd
__aeabi_fcmple
HAL_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
